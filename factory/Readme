工厂模式分为3种主要情况:

1、简单的工厂
    product: 产品类走继承
    factory: 无继承, 就一个工厂类, 它根据传入的参数, 动态决定应该创建哪一类产品类
    缺点: 随着产品派生类的变化, 工厂类动态的跟着变化

2、工厂
    product: 产品类走继承
    factory: 工厂类走继承, 不同的工厂类, 创建不同的产品
    缺点: 本质上, 变化并不大

3、抽象的工厂
    如果产品有不同的形态, 仅靠上面的工厂模式, 就比较麻烦了
    product: 将形态作为产品基类, 针对每一种形态, 不同的产品, 派生出每一种派上类
    factory: 工厂基类描述每一种形态相关的方法, 不同的产品派上出不同的工厂派生类, 每一种产品的工厂派生类, 多态实现各种形态的方法

    或者: 
    product: 将产品作为产品基类, 针对每一种产品, 不同的形态, 派生出每一种派生类
    factory: 工厂基类描述每一种产品相关的方法, 不同的形态派生出不同的工厂派生类, 每一种形态的工厂派生类, 多态实现各种产品的方法

    缺点: 难
    优点: 套用合理的话, 代码清晰合理容易维护和扩展
